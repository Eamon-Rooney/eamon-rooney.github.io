{"ast":null,"code":"import { select } from '@ngrx/store';\nimport { increment, decrement, reset } from '../counter.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport class MyCounterComponent {\n  constructor(store) {\n    this.store = store;\n    this.count$ = store.pipe(select('count'));\n  }\n  increment() {\n    this.store.dispatch(increment());\n  }\n  decrement() {\n    this.store.dispatch(decrement());\n  }\n  reset() {\n    this.store.dispatch(reset());\n  }\n}\nMyCounterComponent.ɵfac = function MyCounterComponent_Factory(t) {\n  return new (t || MyCounterComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\nMyCounterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MyCounterComponent,\n  selectors: [[\"app-compare\"]],\n  decls: 0,\n  vars: 0,\n  template: function MyCounterComponent_Template(rf, ctx) {},\n  styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n});","map":{"version":3,"mappings":"AACA,SAAgBA,MAAM,QAAQ,aAAa;AAE3C,SAASC,SAAS,EAAEC,SAAS,EAAEC,KAAK,QAAQ,oBAAoB;;;AAOhE,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,KAA+B;IAA/B,UAAK,GAALA,KAAK;IACvB,IAAI,CAACC,MAAM,GAAGD,KAAK,CAACE,IAAI,CAACR,MAAM,CAAC,OAAO,CAAC,CAAC;EAC3C;EAEAC,SAAS;IACP,IAAI,CAACK,KAAK,CAACG,QAAQ,CAACR,SAAS,EAAE,CAAC;EAClC;EAEAC,SAAS;IACP,IAAI,CAACI,KAAK,CAACG,QAAQ,CAACP,SAAS,EAAE,CAAC;EAClC;EAEAC,KAAK;IACH,IAAI,CAACG,KAAK,CAACG,QAAQ,CAACN,KAAK,EAAE,CAAC;EAC9B;;;mBAjBWC,kBAAkB;AAAA;;QAAlBA,kBAAkB;EAAAM;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["select","increment","decrement","reset","MyCounterComponent","constructor","store","count$","pipe","dispatch","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\Users\\eamon\\Documents\\eamon-rooney.github.io\\src\\app\\team\\compare\\compare.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { increment, decrement, reset } from '../counter.actions';\n\n@Component({\n  selector: 'app-compare',\n  templateUrl: './compare.component.html',\n  styleUrls: ['./compare.component.css'],\n})\nexport class MyCounterComponent {\n  count$: Observable<number>;\n\n  constructor(private store: Store<{ count: number }>) {\n    this.count$ = store.pipe(select('count'));\n  }\n\n  increment() {\n    this.store.dispatch(increment());\n  }\n\n  decrement() {\n    this.store.dispatch(decrement());\n  }\n\n  reset() {\n    this.store.dispatch(reset());\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}