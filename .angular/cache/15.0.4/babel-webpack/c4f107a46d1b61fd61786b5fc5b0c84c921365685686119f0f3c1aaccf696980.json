{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Eamon/eamon-rooney.github.io/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { TeamComponent } from 'app/team/team.component';\nimport { addLeagueTeams } from 'app/State/compareActions';\nlet FplComponent = class FplComponent {\n  constructor(_fplService, router, store, formBuilder) {\n    this._fplService = _fplService;\n    this.router = router;\n    this.store = store;\n    this.corsAnywhereURL = \"https://cors-anywhere.herokuapp.com\";\n    this.p = 1;\n    this.selectedUser = null;\n    this.toogleDGWs = \"Show\";\n    this.leagueForm = formBuilder.group({\n      leagueID: [null, Validators.compose([Validators.required, Validators.pattern(/^[0-9]*$/)])]\n    });\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      (yield _this._fplService.getFplLeague()).subscribe(response => {\n        _this.league = response;\n        _this.standings = _this.league.standings.results;\n        _this.store.dispatch(addLeagueTeams(_this.standings));\n      }, error => {\n        _this.standingsErrors = error;\n      });\n      (yield _this._fplService.getFplBootstrap()).subscribe(response => {\n        _this.bootstrap = response;\n        _this.events = _this.bootstrap.events;\n        _this.teams = _this.bootstrap.teams;\n        _this.gameweek = _this.events.filter(a => a['is_current'] === true);\n        _this.gameweekID = _this.gameweek[0].id;\n        sessionStorage.setItem('GameWeekID', JSON.stringify(_this.gameweekID));\n      });\n    })();\n  }\n  updateLeague() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      (yield _this2._fplService.updateFplLeague(_this2.league.league.id)).subscribe(response => {\n        var _a, _b;\n        _this2.league = response;\n        _this2.standings = (_b = (_a = _this2.league) === null || _a === void 0 ? void 0 : _a.standings) === null || _b === void 0 ? void 0 : _b.results;\n      });\n    })();\n  }\n  toggleDoubleGws() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _this3.fixtureDGW = _this3.gameweekID + 1;\n      _this3.toogleDGWs = _this3.toogleDGWs === \"Show\" ? \"Hide\" : \"Show\";\n      _this3.doubleGameweekEventID = _this3.events.filter(a => a.id > _this3.gameweekID);\n      _this3.updateDoubleGameweek();\n    })();\n  }\n  updateDoubleGameweek() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      _this4.allTeams = [];\n      _this4.doubleGWTeams = [];\n      (yield _this4._fplService.getFixtures(_this4.fixtureDGW)).subscribe(response => {\n        _this4.fixtures = response;\n        _this4.fixturesDGWTeamsFilter = _this4.fixtures.forEach(teamsFixture => {\n          _this4.allTeams.push(teamsFixture.team_a, teamsFixture.team_h);\n          _this4.doubleGWTeams = _this4.allTeams.filter((e, i, a) => a.indexOf(e) !== i);\n        });\n        _this4.fituresDGWMatchesFilter = _this4.fixtures.filter(fixture => _this4.doubleGWTeams.includes(fixture.team_h) || _this4.doubleGWTeams.includes(fixture.team_a));\n        _this4.doubleGameWeekMap = _this4.doubleGWTeams.map(teamID => {\n          const vsTeams = new Array();\n          for (let fixture of _this4.fituresDGWMatchesFilter) {\n            if (fixture.team_h === teamID) {\n              vsTeams.push(fixture.team_a);\n            }\n            if (fixture.team_a === teamID) {\n              vsTeams.push(fixture.team_h);\n            }\n          }\n          return {\n            dgwTeam: teamID,\n            vsTeams: vsTeams\n          };\n        });\n      });\n    })();\n  }\n  updateTeamNameStorage(teamName, teamID) {\n    sessionStorage.setItem('TeamName', JSON.stringify(teamName));\n    sessionStorage.setItem('TeamID', JSON.stringify(teamID));\n  }\n  navigateToTeam(user) {\n    this.updateTeamNameStorage(user.entry_name, user.entry);\n    this.selectedUser = user;\n    this.router.navigate(['/team', user.entry]);\n  }\n  onOutletLoaded(component) {\n    if (component instanceof TeamComponent) {\n      const sessionTeamName = sessionStorage.getItem('TeamName');\n      const sessionTeamID = sessionStorage.getItem('TeamID');\n      component.teamName = JSON.parse(sessionTeamName);\n      component.teamID = JSON.parse(sessionTeamID);\n    }\n  }\n};\nFplComponent = __decorate([Component({\n  selector: 'app-fpl',\n  templateUrl: './fpl.component.html',\n  styleUrls: ['./fpl.component.scss']\n})], FplComponent);\nexport { FplComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","TeamComponent","addLeagueTeams","FplComponent","constructor","_fplService","router","store","formBuilder","leagueForm","group","leagueID","compose","required","pattern","ngOnInit","getFplLeague","subscribe","response","league","standings","results","dispatch","error","standingsErrors","getFplBootstrap","bootstrap","events","teams","gameweek","filter","a","gameweekID","id","sessionStorage","setItem","JSON","stringify","updateLeague","updateFplLeague","toggleDoubleGws","fixtureDGW","toogleDGWs","doubleGameweekEventID","updateDoubleGameweek","allTeams","doubleGWTeams","getFixtures","fixtures","fixturesDGWTeamsFilter","forEach","teamsFixture","push","team_a","team_h","e","i","indexOf","fituresDGWMatchesFilter","fixture","includes","doubleGameWeekMap","map","teamID","vsTeams","Array","dgwTeam","updateTeamNameStorage","teamName","navigateToTeam","user","entry_name","entry","selectedUser","navigate","onOutletLoaded","component","sessionTeamName","getItem","sessionTeamID","parse","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Eamon\\eamon-rooney.github.io\\src\\app\\fpl\\fpl.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FplService } from './fpl.service';\r\nimport { LeagueStandings, Result } from 'app/interfaces/standings';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Bootstrap, Event, EventList, Teams } from 'app/interfaces/bootstrap';\r\nimport { FixturesList } from 'app/interfaces/fixtures';\r\nimport { TeamComponent } from 'app/team/team.component';\r\nimport { addLeagueTeams } from 'app/State/compareActions';\r\nimport { Store } from '@ngrx/store';\r\nimport { CompareState } from 'app/State/compareReducer';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-fpl',\r\n  templateUrl: './fpl.component.html',\r\n  styleUrls: ['./fpl.component.scss']\r\n})\r\nexport class FplComponent implements OnInit {\r\n\r\n  leagueForm!: FormGroup;\r\n  standingsErrors: any;\r\n  corsAnywhereURL: string = \"https://cors-anywhere.herokuapp.com\";\r\n  league!: LeagueStandings;\r\n  standings!: Result[];\r\n  p: number = 1;\r\n  selectedUser: any = null;\r\n\r\n  bootstrap!: Bootstrap;\r\n  events!: Event | any;\r\n  teams!: Teams | any;\r\n  gameweek!: EventList;\r\n  gameweekID!: number;\r\n\r\n  toogleDGWs: string = \"Show\";\r\n  fixtureDGW!: number;\r\n  fixtures!: FixturesList;\r\n  hasMultiple: any;\r\n  fixturesDGWTeamsFilter!: any;\r\n  fituresDGWMatchesFilter!: any;\r\n  doubleGameweekEventID!: Event | any;\r\n  doubleGWTeams!: number[];\r\n  allTeams!: number[];\r\n  doubleGWTeam!: number;\r\n  doubleGameWeekMap!: any;\r\n\r\n  constructor(private _fplService: FplService,\r\n    private router: Router,\r\n    private store: Store<{ compareState: CompareState }>,\r\n    formBuilder: FormBuilder) {\r\n      this.leagueForm = formBuilder.group({\r\n        leagueID: [null, Validators.compose([Validators.required, Validators.pattern(/^[0-9]*$/)])],\r\n      });\r\n  }\r\n\r\n  async ngOnInit() {\r\n\r\n    (await this._fplService.getFplLeague())\r\n    .subscribe(response => {\r\n      this.league = response;\r\n      this.standings = this.league.standings.results;\r\n      this.store.dispatch(addLeagueTeams(this.standings));\r\n    }, error => {\r\n      this.standingsErrors = error;\r\n    },);\r\n\r\n\r\n    (await this._fplService.getFplBootstrap())\r\n    .subscribe(response => {\r\n      this.bootstrap = response;\r\n      this.events = this.bootstrap.events;\r\n      this.teams = this.bootstrap.teams;\r\n\r\n      this.gameweek = this.events.filter((a: { [x: string]: boolean; }) => a['is_current'] === true);\r\n      this.gameweekID = this.gameweek[0].id;\r\n      sessionStorage.setItem('GameWeekID', JSON.stringify(this.gameweekID));\r\n    });\r\n\r\n  }\r\n\r\n  async updateLeague() {\r\n\r\n    (await this._fplService.updateFplLeague(this.league.league.id))\r\n    .subscribe(response => {\r\n      this.league = response;\r\n      this.standings = this.league?.standings?.results;\r\n    });\r\n\r\n  }\r\n\r\n  async toggleDoubleGws() {\r\n\r\n    this.fixtureDGW = this.gameweekID + 1;\r\n    this.toogleDGWs = this.toogleDGWs === \"Show\" ? \"Hide\" : \"Show\";\r\n    this.doubleGameweekEventID = this.events.filter((a: { id: number; }) => a.id > this.gameweekID);\r\n\r\n    this.updateDoubleGameweek();\r\n\r\n  }\r\n\r\n  async updateDoubleGameweek() {\r\n\r\n    this.allTeams = [];\r\n    this.doubleGWTeams = [];\r\n\r\n    (await this._fplService.getFixtures(this.fixtureDGW))\r\n    .subscribe((response) => {\r\n      this.fixtures = response;\r\n\r\n      this.fixturesDGWTeamsFilter = this.fixtures.forEach((teamsFixture) => {\r\n        this.allTeams.push(teamsFixture.team_a, teamsFixture.team_h);\r\n        this.doubleGWTeams = this.allTeams.filter((e: any, i: any, a: string | any[]) => a.indexOf(e) !== i);\r\n      });\r\n\r\n      this.fituresDGWMatchesFilter = this.fixtures.filter(fixture =>\r\n          this.doubleGWTeams.includes(fixture.team_h) ||\r\n          this.doubleGWTeams.includes(fixture.team_a));\r\n\r\n      this.doubleGameWeekMap = this.doubleGWTeams.map((teamID: any) => {\r\n        const vsTeams = new Array;\r\n        for (let fixture of this.fituresDGWMatchesFilter) {\r\n\r\n          if (fixture.team_h === teamID) {\r\n            vsTeams.push(fixture.team_a);\r\n          }\r\n          if (fixture.team_a === teamID) {\r\n            vsTeams.push(fixture.team_h);\r\n          }\r\n        }\r\n        return {\r\n          dgwTeam: teamID,\r\n          vsTeams: vsTeams\r\n        }\r\n      });\r\n\r\n    });\r\n\r\n  }\r\n\r\n  updateTeamNameStorage(teamName: string, teamID: number) {\r\n    sessionStorage.setItem('TeamName', JSON.stringify(teamName));\r\n    sessionStorage.setItem('TeamID', JSON.stringify(teamID));\r\n  }\r\n\r\n  navigateToTeam(user: any) {\r\n    this.updateTeamNameStorage(user.entry_name, user.entry);\r\n    this.selectedUser = user;\r\n    this.router.navigate(['/team', user.entry]);\r\n  }\r\n\r\n  onOutletLoaded(component: TeamComponent) {\r\n    if (component instanceof TeamComponent) {\r\n      const sessionTeamName: any = sessionStorage.getItem('TeamName');\r\n      const sessionTeamID: any = sessionStorage.getItem('TeamID');\r\n      component.teamName = JSON.parse(sessionTeamName);\r\n      component.teamID = JSON.parse(sessionTeamID);\r\n    }\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}